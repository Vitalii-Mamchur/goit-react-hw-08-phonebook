{"version":3,"sources":["redux/Phonebook/phonebook-actions.js","routes.js","components/Navigation/Navigation.js","components/AuthNav/AuthNav.js","components/UserMenu/default-avatar.png","components/UserMenu/UserMenu.js","components/AppNavBar/AppNavBar.js","components/Loader/Loader.js","components/PrivateRoute.js","components/PublicRoute.js","App.js","redux/Phonebook/phonebook-reducer.js","redux/store.js","index.js","redux/auth/auth-actions.js","redux/auth/auth-reducer.js","redux/auth/auth-operations.js","redux/auth/auth-selectors.js","components/UserMenu/UserMenu.module.css","components/Container/Container.js","components/AppNavBar/AppNavBar.module.css","components/Container/Container.module.css"],"names":["fetchContactRequest","createAction","fetchContactSuccess","fetchContactError","addContactRequest","addContactSuccess","addContactError","deleteContactRequest","deleteContactSuccess","deleteContactError","changeFilter","routes","home","register","login","contacts","connect","state","isAuthenticated","authSelectors","getIsAuthenticated","className","exact","to","activeClassName","AuthNav","mapDispatchToProps","onLogout","authOperations","logOut","name","getUserName","avatar","defaultAvatar","styles","container","src","alt","Button","type","onClick","variant","color","Header","Spinner","height","width","Component","component","redirectTo","routeProps","render","props","restricted","HomeView","lazy","RegisterView","LoginView","ContactsView","App","this","onGetCurrentUser","Container","fallback","path","getCurrentUser","items","createReducer","_","payload","filter","contact","id","loading","combineReducers","middleware","getDefaultMiddleware","serializableCheck","ignoredActions","FLUSH","REHYDRATE","PAUSE","PERSIST","PURGE","REGISTER","logger","authPersistConfig","key","storage","whitelist","store","configureStore","reducer","auth","persistReducer","authReducer","contactsReducer","devTools","process","persistor","persistStore","ReactDOM","StrictMode","document","getElementById","registerRequest","registerSuccess","registerError","loginRequest","loginSuccess","loginError","logoutRequest","logoutSuccess","logoutError","getCurrentUserRequest","getCurrentUserSuccess","getCurrentUserError","initialUserState","email","user","authActions","token","setError","error","axios","defaults","baseURL","headers","common","Authorization","credentials","dispatch","a","post","response","data","message","logIn","getState","persistToken","get","module","exports","children"],"mappings":"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","file":"static/js/main.630f97be.chunk.js","sourcesContent":["import { createAction } from \"@reduxjs/toolkit\";\n\nexport const fetchContactRequest = createAction(\"contacts/fetchContactRequest\");\nexport const fetchContactSuccess = createAction(\"contacts/fetchContactSuccess\");\nexport const fetchContactError = createAction(\"contacts/fetchContactError\");\n\nexport const addContactRequest = createAction(\"contacts/addContactRequest\");\nexport const addContactSuccess = createAction(\"contacts/addContactSuccess\");\nexport const addContactError = createAction(\"contacts/addContactError\");\n\nexport const deleteContactRequest = createAction(\n  \"contacts/deleteContactRequest\"\n);\nexport const deleteContactSuccess = createAction(\n  \"contacts/deleteContactSuccess\"\n);\nexport const deleteContactError = createAction(\"contacts/deleteContactError\");\n\nexport const changeFilter = createAction(\"contacts/changeFilter\");\n","const routes = {\n  home: \"/\",\n  register: \"/register\",\n  login: \"/login\",\n  contacts: \"/contacts\",\n};\nexport default routes;\n","import React from \"react\";\nimport { NavLink } from \"react-router-dom\";\nimport routes from \"../../routes\";\nimport { connect } from \"react-redux\";\nimport { authSelectors } from \"../../redux/auth\";\nimport \"./Navigation.css\";\n\nconst Navigation = ({ isAuthenticated }) => {\n  return (\n    <nav>\n      <ul className=\"Navbar\">\n        <li>\n          <NavLink\n            exact\n            to={routes.home}\n            className=\"NavLink\"\n            activeClassName=\"NavLink--active\"\n          >\n            Home\n          </NavLink>\n        </li>\n        {isAuthenticated && (\n          <li>\n            <NavLink\n              to={routes.contacts}\n              className=\"NavLink\"\n              activeClassName=\"NavLink--active\"\n            >\n              Contacts\n            </NavLink>\n          </li>\n        )}\n      </ul>\n    </nav>\n  );\n};\n\nconst mapStateToProps = (state) => ({\n  isAuthenticated: authSelectors.getIsAuthenticated(state),\n});\n\nexport default connect(mapStateToProps)(Navigation);\n","import React from \"react\";\nimport { NavLink } from \"react-router-dom\";\n\nconst AuthNav = () => (\n  <div>\n    <ul className=\"Navbar\">\n      <li>\n        <NavLink\n          to=\"/register\"\n          exact\n          className=\"NavLink\"\n          activeClassName=\"NavLink--active\"\n        >\n          Create account\n        </NavLink>\n      </li>\n      <li>\n        <NavLink\n          to=\"/login\"\n          exact\n          className=\"NavLink\"\n          activeClassName=\"NavLink--active\"\n        >\n          Login\n        </NavLink>\n      </li>\n    </ul>\n  </div>\n);\n\nexport default AuthNav;\n","export default __webpack_public_path__ + \"static/media/default-avatar.e582e4ba.png\";","import React from \"react\";\nimport { connect } from \"react-redux\";\nimport { authSelectors, authOperations } from \"../../redux/auth\";\nimport defaultAvatar from \"../UserMenu/default-avatar.png\";\nimport styles from \"./UserMenu.module.css\";\nimport { Button } from \"@material-ui/core\";\n\nconst UserMenu = ({ name, avatar, onLogout }) => (\n  <div className={styles.container}>\n    <img src={avatar} alt=\"Avatar\" className={styles.avatar} />\n    <span className={styles.name}>Welcome, {name}</span>\n    <Button type=\"button\" onClick={onLogout} variant=\"outlined\" color=\"primary\">\n      Logout\n    </Button>\n  </div>\n);\nconst mapStateToProps = (state) => ({\n  name: authSelectors.getUserName(state),\n  avatar: defaultAvatar,\n});\n\nconst mapDispatchToProps = {\n  onLogout: authOperations.logOut,\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(UserMenu);\n","import React from \"react\";\nimport { connect } from \"react-redux\";\nimport Navigation from \"../Navigation\";\nimport AuthNav from \"../AuthNav\";\nimport UserMenu from \"../UserMenu\";\nimport { authSelectors } from \"../../redux/auth\";\nimport styles from \"./AppNavBar.module.css\";\n\nconst AppBar = ({ isAuthenticated }) => {\n  return (\n    <header className={styles.Header}>\n      <Navigation />\n      {isAuthenticated ? <UserMenu /> : <AuthNav />}\n    </header>\n  );\n};\n\nconst mapStateToProps = (state) => ({\n  isAuthenticated: authSelectors.getIsAuthenticated(state),\n});\n\nexport default connect(mapStateToProps)(AppBar);\n","import React from \"react\";\nimport Loader from \"react-loader-spinner\";\n\nconst Spinner = () => {\n  return (\n    <div>\n      <Loader type=\"Circles\" color=\"#00BFFF\" height={100} width={100} />\n    </div>\n  );\n};\nexport default Spinner;\n","import { Route, Redirect } from \"react-router-dom\";\nimport { connect } from \"react-redux\";\nimport authSelectors from \"../redux/auth/auth-selectors\";\n\nconst PrivateRoute = ({\n  component: Component,\n  isAuthenticated,\n  redirectTo,\n  ...routeProps\n}) => (\n  <Route\n    {...routeProps}\n    render={(props) =>\n      isAuthenticated ? <Component {...props} /> : <Redirect to={redirectTo} />\n    }\n  />\n);\nconst mapStateToProps = (state) => ({\n  isAuthenticated: authSelectors.getIsAuthenticated(state),\n});\n\nexport default connect(mapStateToProps)(PrivateRoute);\n","import React from \"react\";\nimport { Route, Redirect } from \"react-router-dom\";\nimport { connect } from \"react-redux\";\nimport authSelectors from \"../redux/auth/auth-selectors\";\n\nconst PublicRoute = ({\n  component: Component,\n  isAuthenticated,\n  redirectTo,\n  ...routeProps\n}) => (\n  <Route\n    {...routeProps}\n    render={(props) =>\n      isAuthenticated && routeProps.restricted ? (\n        <Redirect to={redirectTo} />\n      ) : (\n        <Component {...props} />\n      )\n    }\n  />\n);\n\nconst mapStateToProps = (state) => ({\n  isAuthenticated: authSelectors.getIsAuthenticated(state),\n});\n\nexport default connect(mapStateToProps)(PublicRoute);\n","import React, { Component, Suspense, lazy } from \"react\";\nimport { connect } from \"react-redux\";\nimport { Switch } from \"react-router-dom\";\nimport routes from \"./routes\";\nimport \"./styles.css\";\nimport AppBar from \"./components/AppNavBar\";\nimport Spinner from \"./components/Loader\";\nimport Container from \"./components/Container\";\nimport { authOperations } from \"./redux/auth\";\nimport PrivateRoute from \"./components/PrivateRoute\";\nimport PublicRoute from \"./components/PublicRoute\";\n\nconst HomeView = lazy(() =>\n  import(\"./views/HomeView.js\" /* webpackChunkName: \"home-view\" */)\n);\nconst RegisterView = lazy(() =>\n  import(\"./views/RegisterView\" /*webpackChunkName: \"register-view\" */)\n);\nconst LoginView = lazy(() =>\n  import(\"./views/LoginView\" /*webpackChunkName: \"login-view\" */)\n);\nconst ContactsView = lazy(() =>\n  import(\"./views/ContactsView.js\" /*webpackChunkName: \"contacts-view\" */)\n);\n\nclass App extends Component {\n  componentDidMount() {\n    this.props.onGetCurrentUser();\n  }\n  render() {\n    return (\n      <>\n        <AppBar />\n        <Container>\n          <Suspense fallback={<Spinner />}>\n            <Switch>\n              <PublicRoute exact path={routes.home} component={HomeView} />\n              <PublicRoute\n                path={routes.register}\n                restricted\n                redirectTo={routes.home}\n                component={RegisterView}\n              />\n              <PublicRoute\n                path={routes.login}\n                restricted\n                redirectTo={routes.home}\n                component={LoginView}\n              />\n              <PrivateRoute\n                path={routes.contacts}\n                component={ContactsView}\n                redirectTo={routes.login}\n              />\n            </Switch>\n          </Suspense>\n        </Container>\n      </>\n    );\n  }\n}\n\nconst mapDispatchToProps = {\n  onGetCurrentUser: authOperations.getCurrentUser,\n};\n\nexport default connect(null, mapDispatchToProps)(App);\n","import { combineReducers } from \"redux\";\nimport { createReducer } from \"@reduxjs/toolkit\";\nimport {\n  fetchContactRequest,\n  fetchContactSuccess,\n  fetchContactError,\n  addContactRequest,\n  addContactSuccess,\n  addContactError,\n  deleteContactRequest,\n  deleteContactSuccess,\n  deleteContactError,\n  changeFilter,\n} from \"./phonebook-actions\";\n\n// const contacts = [];\n\nconst items = createReducer([], {\n  [fetchContactSuccess]: (_, { payload }) => payload,\n  [addContactSuccess]: (state, { payload }) => [...state, payload],\n  // [addContactSuccess]: (state, { payload }) => {\n  //   if (state.map((contact) => contact.name).includes(payload.name)) {\n  //     return alert(`${payload.name} is already exist`);\n  //   }\n  //   return [...state, payload];\n  // },\n  [deleteContactSuccess]: (state, { payload }) =>\n    state.filter((contact) => contact.id !== payload),\n});\n\nconst loading = createReducer(false, {\n  [fetchContactRequest]: () => true,\n  [fetchContactSuccess]: () => false,\n  [fetchContactError]: () => false,\n  [addContactRequest]: () => true,\n  [addContactSuccess]: () => false,\n  [addContactError]: () => false,\n  [deleteContactRequest]: () => true,\n  [deleteContactSuccess]: () => false,\n  [deleteContactError]: () => false,\n});\n\nconst filter = createReducer(\"\", {\n  [changeFilter]: (_, { payload }) => payload,\n});\n\nexport default combineReducers({\n  items,\n  filter,\n  loading,\n});\n","import { configureStore, getDefaultMiddleware } from \"@reduxjs/toolkit\";\nimport logger from \"redux-logger\";\nimport {\n  persistStore,\n  persistReducer,\n  FLUSH,\n  REHYDRATE,\n  PAUSE,\n  PERSIST,\n  PURGE,\n  REGISTER,\n} from \"redux-persist\";\nimport contactsReducer from \"./Phonebook/phonebook-reducer\";\nimport { authReducer } from \"./auth\";\nimport storage from \"redux-persist/lib/storage\";\n\nconst middleware = [\n  ...getDefaultMiddleware({\n    serializableCheck: {\n      ignoredActions: [FLUSH, REHYDRATE, PAUSE, PERSIST, PURGE, REGISTER],\n    },\n  }),\n  logger,\n];\n\nconst authPersistConfig = {\n  key: \"auth\",\n  storage,\n  whitelist: [\"token\"],\n};\n\nconst store = configureStore({\n  reducer: {\n    auth: persistReducer(authPersistConfig, authReducer),\n    contacts: contactsReducer,\n  },\n  middleware,\n  devTools: process.env.NODE_ENV === \"development\",\n});\n\nconst persistor = persistStore(store);\n\n// eslint-disable-next-line import/no-anonymous-default-export\nexport default { store, persistor };\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"modern-normalize/modern-normalize.css\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport { BrowserRouter } from \"react-router-dom\";\nimport { Provider } from \"react-redux\";\nimport store from \"./redux/store\";\nimport { PersistGate } from \"redux-persist/integration/react\";\n// console.log(store);\n// console.log(store.getState());\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store.store}>\n      <PersistGate loading={null} persistor={store.persistor}>\n        <BrowserRouter>\n          <App />\n        </BrowserRouter>\n      </PersistGate>\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n","/* eslint-disable import/no-anonymous-default-export */\nimport { createAction } from \"@reduxjs/toolkit\";\n\nconst registerRequest = createAction(\"auth/registerRequest\");\nconst registerSuccess = createAction(\"auth/registerSuccess\");\nconst registerError = createAction(\"auth/registerError\");\n\nconst loginRequest = createAction(\"auth/loginRequest\");\nconst loginSuccess = createAction(\"auth/loginSuccess\");\nconst loginError = createAction(\"auth/loginError\");\n\nconst logoutRequest = createAction(\"auth/logoutRequest\");\nconst logoutSuccess = createAction(\"auth/logoutSuccess\");\nconst logoutError = createAction(\"auth/logoutError\");\n\nconst getCurrentUserRequest = createAction(\"auth/getCurrentUserRequest\");\nconst getCurrentUserSuccess = createAction(\"auth/getCurrentUserSuccess\");\nconst getCurrentUserError = createAction(\"auth/getCurrentUserError\");\n\nexport default {\n  registerRequest,\n  registerSuccess,\n  registerError,\n  loginRequest,\n  loginSuccess,\n  loginError,\n  logoutRequest,\n  logoutSuccess,\n  logoutError,\n  getCurrentUserRequest,\n  getCurrentUserSuccess,\n  getCurrentUserError,\n};\n","import { combineReducers } from \"redux\";\nimport { createReducer } from \"@reduxjs/toolkit\";\nimport authActions from \"./auth-actions\";\n\nconst initialUserState = { name: null, email: null };\n\nconst user = createReducer(initialUserState, {\n  [authActions.registerSuccess]: (_, { payload }) => payload.user,\n  [authActions.loginSuccess]: (_, { payload }) => payload.user,\n  [authActions.logoutSuccess]: () => initialUserState,\n  [authActions.getCurrentUserSuccess]: (_, { payload }) => payload,\n});\n\nconst token = createReducer(null, {\n  [authActions.registerSuccess]: (_, { payload }) => payload.token,\n  [authActions.loginSuccess]: (_, { payload }) => payload.token,\n  [authActions.logoutSuccess]: () => null,\n});\n\nconst setError = (_, { payload }) => payload;\n\nconst error = createReducer(null, {\n  [authActions.registerError]: setError,\n  [authActions.loginError]: setError,\n  [authActions.logoutError]: setError,\n  [authActions.getCurrentUserError]: setError,\n});\n\nconst isAuthenticated = createReducer(false, {\n  [authActions.registerSuccess]: () => true,\n  [authActions.loginSuccess]: () => true,\n  [authActions.getCurrentUserSuccess]: () => true,\n  [authActions.registerError]: () => false,\n  [authActions.loginError]: () => false,\n  [authActions.getCurrentUserError]: () => false,\n  [authActions.logoutSuccess]: () => false,\n});\nexport default combineReducers({\n  user,\n  isAuthenticated,\n  token,\n  error,\n});\n","import axios from \"axios\";\nimport authActions from \"./auth-actions\";\n\naxios.defaults.baseURL = \"https://connections-api.herokuapp.com/\";\n\nconst token = {\n  set(token) {\n    axios.defaults.headers.common.Authorization = `Bearer ${token}`;\n  },\n  unset() {\n    axios.defaults.headers.common.Authorization = \"\";\n  },\n};\n\nconst register = (credentials) => async (dispatch) => {\n  dispatch(authActions.registerRequest());\n  try {\n    const response = await axios.post(\"/users/signup\", credentials);\n\n    token.set(response.data.token);\n    dispatch(authActions.registerSuccess(response.data));\n  } catch (error) {\n    dispatch(authActions.registerError(error.message));\n  }\n};\n\nconst logIn = (credentials) => async (dispatch) => {\n  dispatch(authActions.loginRequest());\n  try {\n    const response = await axios.post(\"/users/login\", credentials);\n\n    token.set(response.data.token);\n    dispatch(authActions.loginSuccess(response.data));\n  } catch (error) {\n    dispatch(authActions.loginError(error.message));\n  }\n};\n\nconst logOut = () => async (dispatch) => {\n  dispatch(authActions.logoutRequest());\n\n  try {\n    await axios.post(\"/users/logout\");\n\n    token.unset();\n    dispatch(authActions.logoutSuccess());\n  } catch (error) {\n    dispatch(authActions.logoutError(error.message));\n  }\n};\n\nconst getCurrentUser = () => async (dispatch, getState) => {\n  const {\n    auth: { token: persistToken },\n  } = getState();\n\n  if (!persistToken) {\n    return;\n  }\n\n  token.set(persistToken);\n\n  dispatch(authActions.getCurrentUserRequest());\n\n  try {\n    const response = await axios.get(\"users/current\");\n\n    dispatch(authActions.getCurrentUserSuccess(response.data));\n  } catch (error) {\n    dispatch(authActions.getCurrentUserError(error.message));\n  }\n};\n\n// eslint-disable-next-line import/no-anonymous-default-export\nexport default {\n  register,\n  logIn,\n  logOut,\n  getCurrentUser,\n};\n","/* eslint-disable import/no-anonymous-default-export */\nconst getIsAuthenticated = (state) => state.auth.isAuthenticated;\n\nconst getUserName = (state) => state.auth.user.name;\n\nexport default {\n  getIsAuthenticated,\n  getUserName,\n};\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"UserMenu_container__868co\",\"avatar\":\"UserMenu_avatar__3YqSG\",\"name\":\"UserMenu_name__2hBJw\"};","import React from \"react\";\nimport styles from \"./Container.module.css\";\n\nconst Container = ({ children }) => (\n  <div className={styles.Container}>{children}</div>\n);\n\nexport default Container;\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Header\":\"AppNavBar_Header__3yIny\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Container\":\"Container_Container__3kpiG\"};"],"sourceRoot":""}