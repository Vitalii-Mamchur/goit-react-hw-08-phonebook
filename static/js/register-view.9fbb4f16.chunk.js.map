{"version":3,"sources":["views/RegisterView.js"],"names":["styles","form","width","label","display","flexDirection","marginBottom","RegisterView","state","name","email","password","handleChange","target","value","setState","handleSubmit","e","preventDefault","props","onRegister","this","className","onSubmit","style","autoComplete","type","onChange","variant","Component","mapDispatchToProps","authOperations","register","connect"],"mappings":"wQAMMA,EAAS,CACbC,KAAM,CACJC,MAAO,KAETC,MAAO,CACLC,QAAS,OACTC,cAAe,SACfC,aAAc,KAIZC,E,4MACJC,MAAQ,CACNC,KAAM,GACNC,MAAO,GACPC,SAAU,I,EAGZC,aAAe,YAAkC,IAAD,IAA9BC,OAAUJ,EAAoB,EAApBA,KAAMK,EAAc,EAAdA,MAChC,EAAKC,SAAL,eAAiBN,EAAOK,K,EAG1BE,aAAe,SAACC,GACdA,EAAEC,iBAEF,EAAKC,MAAMC,WAAW,EAAKZ,OAE3B,EAAKO,SAAS,CAAEN,KAAM,GAAIC,MAAO,GAAIC,SAAU,M,4CAGjD,WACE,MAAkCU,KAAKb,MAA/BC,EAAR,EAAQA,KAAMC,EAAd,EAAcA,MAAOC,EAArB,EAAqBA,SAErB,OACE,qBAAKW,UAAU,oBAAf,SACE,sBAAKA,UAAU,kBAAf,UACE,oBAAIA,UAAU,gBAAd,0BACA,uBACEC,SAAUF,KAAKL,aACfQ,MAAOxB,EAAOC,KACdwB,aAAa,MAHf,UAKE,wBAAOD,MAAOxB,EAAOG,MAArB,+BAEE,uBACEuB,KAAK,OACLjB,KAAK,OACLK,MAAOL,EACPkB,SAAUN,KAAKT,kBAGnB,wBAAOY,MAAOxB,EAAOG,MAArB,2CAEE,uBACEuB,KAAK,QACLjB,KAAK,QACLK,MAAOJ,EACPiB,SAAUN,KAAKT,kBAGnB,wBAAOY,MAAOxB,EAAOG,MAArB,iDAEE,uBACEuB,KAAK,WACLjB,KAAK,WACLK,MAAOH,EACPgB,SAAUN,KAAKT,kBAGnB,cAAC,IAAD,CAAQc,KAAK,SAASE,QAAQ,YAA9B,sI,GA1DeC,aAoErBC,EAAqB,CACzBV,WAAYW,IAAeC,UAGdC,sBAAQ,KAAMH,EAAdG,CAAkC1B","file":"static/js/register-view.9fbb4f16.chunk.js","sourcesContent":["import React, { Component } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { authOperations } from \"../redux/auth\";\r\nimport \"./Views.css\";\r\nimport { Button } from \"@material-ui/core\";\r\n\r\nconst styles = {\r\n  form: {\r\n    width: 320,\r\n  },\r\n  label: {\r\n    display: \"Flex\",\r\n    flexDirection: \"column\",\r\n    marginBottom: 15,\r\n  },\r\n};\r\n\r\nclass RegisterView extends Component {\r\n  state = {\r\n    name: \"\",\r\n    email: \"\",\r\n    password: \"\",\r\n  };\r\n\r\n  handleChange = ({ target: { name, value } }) => {\r\n    this.setState({ [name]: value });\r\n  };\r\n\r\n  handleSubmit = (e) => {\r\n    e.preventDefault();\r\n\r\n    this.props.onRegister(this.state);\r\n\r\n    this.setState({ name: \"\", email: \"\", password: \"\" });\r\n  };\r\n\r\n  render() {\r\n    const { name, email, password } = this.state;\r\n\r\n    return (\r\n      <div className=\"RegisterContainer\">\r\n        <div className=\"RegisterSection\">\r\n          <h1 className=\"RegisterTitle\">Registration</h1>\r\n          <form\r\n            onSubmit={this.handleSubmit}\r\n            style={styles.form}\r\n            autoComplete=\"off\"\r\n          >\r\n            <label style={styles.label}>\r\n              Имя\r\n              <input\r\n                type=\"text\"\r\n                name=\"name\"\r\n                value={name}\r\n                onChange={this.handleChange}\r\n              />\r\n            </label>\r\n            <label style={styles.label}>\r\n              Почта\r\n              <input\r\n                type=\"email\"\r\n                name=\"email\"\r\n                value={email}\r\n                onChange={this.handleChange}\r\n              />\r\n            </label>\r\n            <label style={styles.label}>\r\n              Пароль\r\n              <input\r\n                type=\"password\"\r\n                name=\"password\"\r\n                value={password}\r\n                onChange={this.handleChange}\r\n              />\r\n            </label>\r\n            <Button type=\"submit\" variant=\"contained\">\r\n              Зарегистрироваться\r\n            </Button>\r\n          </form>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapDispatchToProps = {\r\n  onRegister: authOperations.register,\r\n};\r\n\r\nexport default connect(null, mapDispatchToProps)(RegisterView);\r\n"],"sourceRoot":""}